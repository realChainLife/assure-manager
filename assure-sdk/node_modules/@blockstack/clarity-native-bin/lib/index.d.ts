import { ILogger } from "./logger";
/**
 * Should correspond to both a git tag on the blockstack-core repo and a
 * set of clarity-binary distributables uploaded to the cloud storage endpoint.
 */
export declare const CORE_SDK_TAG = "clarity-sdk-v0.1.0";
export declare const BLOCKSTACK_CORE_SOURCE_TAG_ENV_VAR = "BLOCKSTACK_CORE_SOURCE_TAG";
export declare const BLOCKSTACK_CORE_SOURCE_BRANCH_ENV_VAR = "BLOCKSTACK_CORE_SOURCE_BRANCH";
export declare const BLOCKSTACK_CORE_SOURCE_PATH_ENV_VAR = "BLOCKSTACK_CORE_SOURCE_PATH";
/**
 * Returns the full file path of the native clarity-cli executable.
 * Throws an error if it does not exist.
 * @param checkExists [Default = true] If true then an error is thrown if the file does not exist.
 * @param versionTag Defaults to the current `CORE_SDK_TAG`.
 */
export declare function getDefaultBinaryFilePath({ checkExists, versionTag }?: {
    checkExists?: boolean;
    versionTag?: string;
}): string;
export declare function installDefaultPath(): Promise<boolean>;
export declare function install(opts: {
    fromSource: boolean;
    logger: ILogger;
    overwriteExisting: boolean;
    outputFilePath: string;
    versionTag: string;
}): Promise<boolean>;
