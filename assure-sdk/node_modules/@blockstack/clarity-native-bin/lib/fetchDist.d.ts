import { ILogger } from "./logger";
declare const enum SupportedDistPlatform {
    WINDOWS = "win",
    MACOS = "mac",
    LINUX = "linux",
    LINUX_MUSL = "linux-musl"
}
declare const enum SupportedDistArch {
    x64 = "x64"
}
/**
 * Checks if the currently executing platform and architecture has an distributable available
 * for download.
 * @param logger Optionally log error message for unsupported platform or arch.
 */
export declare function isDistAvailable(logger?: ILogger): {
    platform: SupportedDistPlatform;
    arch: SupportedDistArch;
} | false;
/**
 * Gets a download url for a dist archive containing a binary that
 * can run in the currently executing system OS and architecture.
 * Returns false if system is incompatible with known available distributables.
 */
export declare function getDownloadUrl(logger: ILogger, versionTag: string): string | false;
/**
 * Returns true if install was successful.
 * @param opts
 */
export declare function fetchDistributable(opts: {
    logger: ILogger;
    overwriteExisting: boolean;
    outputFilePath: string;
    versionTag: string;
}): Promise<boolean>;
export {};
